<div class="span12" style="margin-left:-2px;">
	<div class="button-bar">
		<span class="buttons">
			{{#user_can INVENTORY_EDIT}}<a class="btn btn-mini btn-primary ajax-modal" data-width="850" data-href="{{controller_base_url}}edit" href="#add-supply"><i class="icon-plus"></i> New Item</a>{{/user_can}}
			{{#user_can INVENTORY_EDIT}}<a class="btn btn-mini btn-primary ajax-modal" data-width="400" data-href="{{controller_base_url}}allocate" title=" Inventory pull" data-toggle="tooltip"><i class="icon-minus-sign"></i> Inventory Pull</a>{{/user_can}}
			{{#user_can INVENTORY_EDIT}}<a class="btn btn-mini btn-primary ajax-modal" data-width="480" data-href="{{component_base_url}}supplyTypes/edit" href="#add-supply-type"><i class="icon-sitemap"></i> New Category</a>{{/user_can}}
			{{#user_can INVENTORY_EDIT}}<a class="btn btn-mini btn-primary ajax-modal" data-width="480" data-href="{{component_base_url}}packageTypes/edit" href="#add-package-type"><i class="icon-inbox"></i> New Package</a>{{/user_can}}
			{{#user_can INVENTORY_EDIT}}<a class="btn btn-mini btn-primary ajax-modal" data-width="480" data-href="{{component_base_url}}supplyLocations/edit" href="#add-supply-location"><i class="icon-map-marker"></i> New Location</a> </span>{{/user_can}}
	</div>
	<!-- <table id="supplies" class="table table-striped table-bordered table-hover table-condensed" ajax-url="{{controller_base_url}}"> -->
		<table id="supplies" ajax-url="{{controller_base_url}}">
			<thead >
				<tr>
					<th class="center">&nbsp;</th>
					<th>Code</th>
					<th>Item</th>
					<th>Reorder<br/>Level</th>
					<th>Target<br/>Level</th>
					<th class="hidden-480">Quantity per<br/>Package</th>
					<th class="hidden-480">Price per<br/>Package</th>
					<th>Quantity on<br/>Hand</th>
					<th>Stock Level</th>
					{{#user_can INVENTORY_EDIT INVENTORY_DELETE}}
						<th>Actions</th>
					{{/user_can}}
				</tr>
			</thead>
	</table>
	<script type="text/javascript">
		function get_level_indicator(target_level, total_quantity, percentage_limit) {
			var level_indicator = 'OK';
			target = (target_level) ? target_level : total_quantity;
			var percentage = total_quantity / target * 100;
			if (total_quantity <= 0) {
				var level_indicator = 'OUT OF STOCK';
			} else if(percentage <= percentage_limit) {
				var level_indicator = 'RUNNING LOW';
			} else if(total_quantity > target) {
				var level_indicator = 'OVERSTOCK ';
			}
			return level_indicator;
		}

		function get_level_indicator_badge(target_level, total_quantity, percentage_limit) {
			var level_indicator = 'success';
			target_level = (target_level) ? target_level : total_quantity;
			var percentage = total_quantity / target_level * 100;
			if(total_quantity <= 0) {
				var level_indicator = 'important';
			} else if(percentage <= percentage_limit) {
				var level_indicator = 'yellow';
			} else if(total_quantity > target_level) {
				var level_indicator = 'purple ';
			}
			return level_indicator;
		}

		var suppliesButtons = [];
		{{#user_can INVENTORY_EDIT INVENTORY_DELETE}}
			suppliesButtons = [{
					"aTargets": [9],
					"mData": null,
					"mRender": function (tableRowData, callType, ajaxRowData) {
							return '<div class="hidden-phone visible-desktop btn-group">'
									{{#user_can INVENTORY_EDIT}} +
											'<a class="btn btn-mini btn-info ajax-modal" ' +
													'title="Add Batch" data-toggle="tooltip" data-width="500" ' +
													'data-href="{{controller_base_url}}add_purchase/' + ajaxRowData[9] + '">' +
													'<i class="icon-plus-sign"></i></a>' +
											'<button class="btn btn-mini btn-info ajax-modal" ' +
													'title="Inventory pull" data-toggle="tooltip" data-width="400" ' +
													'data-href="{{controller_base_url}}allocate_item/' + ajaxRowData[9] + '">' +
													'<i class="icon-minus-sign"></i>' +
													'</button>' +
											'<button class="btn btn-mini btn-info ajax-modal" data-width="760" ' +
													'title="Edit" data-toggle="tooltip" data-href="{{controller_base_url}}edit/' + ajaxRowData[9] + '">' +
													'<i class="icon-edit"></i>' +
													'</button>'
									{{/user_can}}
									{{#user_can INVENTORY_DELETE}} +
										'<button class="btn btn-mini btn-danger confirm-action" title="Delete" ' +
												'data-toggle="tooltip" data-href="{{../controller_base_url}}delete/' + ajaxRowData[9] + '" ' +
												'data-ajax="0" data-msg="Are you sure you want to delete {{supply_name}}?">' +
												'<i class="icon-trash"></i>' +
												'</button>' +
									{{/user_can}}
									

									'</div>';
						}
				}
			];
		{{/user_can}}
		var coloumnDefs = [
				{
					"aTargets": [8],
					"mData": null,
					"mRender": function (tableRowData, callType, ajaxRowData) {
							return '<span class="label label label-' + get_level_indicator_badge(ajaxRowData[4], ajaxRowData[7], ajaxRowData[8]) + '">' + get_level_indicator(ajaxRowData[4], ajaxRowData[7], ajaxRowData[8]) + ' </span>';
						}
				},
				{
					"aTargets": [0],
					"mData": null,
					"mRender": function (tableRowData, callType, ajaxRowData) {
							return '<img src="assets/supplies/' + ajaxRowData[0] + '" class="thumbnail">';
						}
				}
			];
		var sortDefs = [
				{
					"bSortable" : false,
					"aTargets" : [0,-1],
				}
			];
		var finalColumnDefs = coloumnDefs.concat(suppliesButtons).concat(sortDefs);
		$(document).ready(function () {
				window.mainDataTableAjax = initDataTableAjax('#supplies', finalColumnDefs);
			});
		//window.suppliesDataTable = initDataTableAjax('#supplies', [-1], suppliesButtons);
		var renderbuttons = function (ajaxRowData) {
							return {{#user_can INVENTORY_EDIT}} +
											'<a class="btn btn-mini btn-info ajax-modal" ' +
													'title="Add Batch" data-toggle="tooltip" data-width="500" ' +
													'data-href="{{controller_base_url}}add_purchase/' + ajaxRowData[9] + '">' +
													'<i class="icon-plus-sign"></i></a>' +
											'<button class="btn btn-mini btn-info ajax-modal" ' +
													'title="Inventory pull" data-toggle="tooltip" data-width="400" ' +
													'data-href="{{controller_base_url}}allocate_item/' + ajaxRowData[9] + '">' +
													'<i class="icon-minus-sign"></i>' +
													'</button>' +
											'<button class="btn btn-mini btn-info ajax-modal" data-width="760" ' +
													'title="Edit" data-toggle="tooltip" data-href="{{controller_base_url}}edit/' + ajaxRowData[9] + '">' +
													'<i class="icon-edit"></i>' +
													'</button>'+
									{{/user_can}}
									{{#user_can INVENTORY_DELETE}} +
										'<button class="btn btn-mini btn-danger confirm-action" title="Delete" ' +
												'data-toggle="tooltip" data-href="{{../controller_base_url}}delete/' + ajaxRowData[9] + '" ' +
												'data-ajax="0" data-msg="Are you sure you want to delete {{supply_name}}?">' +
												'<i class="icon-trash"></i>' +
												'</button>';
									{{/user_can}}

					};
	</script>
</div>
<script type="text/javascript">
	window.supplyTableRowData = function(formData, dataTableData, newRow) {
			var id = formData['id'];
			var actions = null;
			if (newRow){
				actions = '<div class="hidden-phone visible-desktop btn-group">';
				actions += '<button class="btn btn-mini btn-info ajax-modal" title="Edit" data-width="760" data-href="{{controller_base_url}}edit/' + id + '"><i class="icon-edit"></i></button>';
				actions += '<button class="btn btn-mini btn-danger confirm-action" title="Delete" data-href="{{controller_base_url}}delete/' + id + '" data-ajax="0" data-msg="Are you sure you want to delete "' + formData['supply_name'] + '?"><i class="icon-trash"></i></button>';
				actions += '</div>';
			}
			return [
					(newRow) ? dataTableData.length + 1 : null,
					formData['product_code'],
					formData['supply_name'],
					formData['reorder_level'],
					formData['target_level'],
					formData['quantity_per_package'],
					formData['price_per_package'],
					formData['price_per_unit'],
					null, // null means leave as is, TODO: get overstock level markup for here
					actions
				];
	};
</script>